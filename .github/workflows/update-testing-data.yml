name: Update testing data
on:
  schedule:
    - cron: "0 0 * * *"
jobs:
  run:
    name: Update testing data
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
    steps:
      - uses: s-weigand/setup-conda@v1
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install datalad
        run: |
          conda install -c conda-forge datalad==0.14.5
          git config --global user.email "CI@example.com"
          git config --global user.name "CI Almighty"
      - name: Get ephys_testing_data current head hash
        id: ephys
        run: echo "::set-output name=HASH_EPHYS_DATASET::$(git ls-remote https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git HEAD | cut -f1)"
      - name: Get ophys_testing_data current head hash
        id: ophys
        run: echo "::set-output name=HASH_OPHYS_DATASET::$(git ls-remote https://gin.g-node.org/CatalystNeuro/ophys_testing_data.git HEAD | cut -f1)"
      - name: Cache ephys dataset - ${{ steps.ephys.outputs.HASH_EPHYS_DATASET }}
        uses: actions/cache@v2
        id: cache-ephys-dataset
        with:
          path: /home/runner/work/nwb-conversion-tools/nwb-conversion-tools/ephy_testing_data
          key: ephys-datasets-1-${{ steps.ephys.outputs.HASH_EPHYS_DATASET }}
          restore-keys: ephys-datasets-1-${{ steps.ephys.outputs.HASH_EPHYS_DATASET }}
      - name: Cache ophys dataset - ${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}
        uses: actions/cache@v2
        id: cache-ophys-dataset
        with:
          path: /home/runner/work/nwb-conversion-tools/nwb-conversion-tools/ophys_testing_data
          key: ophys-datasets-1-${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}
          restore-keys: ophys-datasets-1-${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}
      - name: Update datasets
        run: |
          datalad install -r -g https://gin.g-node.org/NeuralEnsemble/ephy_testing_data
          datalad install https://gin.g-node.org/CatalystNeuro/ophys_testing_data
          cd ophys_testing_data
          datalad get -r ./imaging_datasets/
          datalad get -r ./segmentation_datasets/
